package com.hdi.animation.easing{		////////////////////////////////////////////////////////////////////////////////	//	Easing: Based on 	//	Easing 1.0 12/24/10	//  Copyright © 2003 Robert Penner	//	All rights reserved.	//	Terms of Use: http://www.robertpenner.com/easing_terms_of_use.html	//		////////////////////////////////////////////////////////////////////////////////	import flash.utils.getDefinitionByName;	import com.hdi.animation.MoveThisObject;		public class Easing{				public function Easing(){					}				public static function easefunction(moveObj:MoveThisObject,easeFunction:Function):Number{			var num:Number;						try{				num =  easeFunction(moveObj.currentFrame, moveObj.startValue, moveObj.changeValue, moveObj.frames);			}			catch(e:Error){throw(new Error("Check ease name: " + moveObj.easing));}						return num;					}				public static function getEasingFunction(str:String):Function{			var easeStr:Array = str.split(".");			var easingClass:Class;			switch(easeStr[0].toString().toLowerCase()){				case "back":					easingClass = Back;					break;				case "bounce":					easingClass = Bounce;					break;				case "circ":					easingClass = Circ;					break;				case "cubic":					easingClass = Cubic;					break;				case "elastic":					easingClass = Elastic;					break;				case "expo":					easingClass = Expo;					break;				case "quad":					easingClass = Quad;					break;				case "quart":					easingClass = Quart;					break;				case "quint":					easingClass = Quint;					break;				case "sine":					easingClass = Sine;					break;				case "arch":					easingClass = Arch;					break;				case "reverse":					easingClass = Reverse;					break;			}						var func:Function = null;			try{				func = easingClass[easeStr[1]];			}			catch(e:Error){throw(new Error("Check ease name: " + str));}			if(func == null){				throw(new Error("Check ease name: " + str));			}						return func;					}				//Linear		public static function linear(t:Number, b:Number, c:Number, d:Number):Number {			return c*t/d + b;		}	}}