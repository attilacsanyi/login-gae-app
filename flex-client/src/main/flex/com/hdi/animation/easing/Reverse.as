package com.hdi.animation.easing{		////////////////////////////////////////////////////////////////////////////////	//	Reverse 1.0 1/30/11	//  Copyright © Todd Williams	//	All rights reserved.	//		////////////////////////////////////////////////////////////////////////////////	public class Reverse{				public function Reverse(){		}				//Reverse		public static function easeOut(t:Number, b:Number, c:Number, d:Number):Number {			var num:Number = c * Math.sin(t/d * (Math.PI/2));			if(Math.abs(num*2) <= Math.abs(c)){				return num*2 + b;			}			else{				return c*2 - num*2 + b;			}		}		public static function easeIn(t:Number, b:Number, c:Number, d:Number):Number {			var num:Number = -c * Math.cos(t/d * (Math.PI/2)) + c;			if(Math.abs(num*2) <= Math.abs(c)){				return num*2 + b;			}			else{				return c*2 - num*2 + b;			}		}		public static function easeInOut(t:Number, b:Number, c:Number, d:Number):Number {			var num:Number = -c/2 * (Math.cos(Math.PI*t/d) - 1);			if(Math.abs(num*2) <= Math.abs(c)){				return num*2 + b;			}			else{				return c*2 - num*2 + b;			}		}				public static function easeOutIn(t:Number, b:Number, c:Number, d:Number):Number {			var num:Number = -c/2 * (Math.sin(Math.PI*t/d) - 1);			return c - num*2 + b;		}				public static function linear(t:Number, b:Number, c:Number, d:Number):Number{			if(t < d/2){				return c*(t/d*2) + b;			}			else{				return c*2 - c*(t/d*2) + b;			}		}	}}